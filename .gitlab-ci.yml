# .gitlab-ci.yml
#
# substrate-analytics (derived from substrate ci)
#
# pipelines can be triggered manually in the web
# setting DEPLOY_TAG will only deploy the tagged image
#


stages:
  - test
  - dockerize
  - deploy

variables:
  GIT_STRATEGY:                    fetch
  CI_SERVER_NAME:                  "GitLab CI"
  CARGO_HOME:                      "/ci-cache/substrate-analytics/cargo/${CI_JOB_NAME}"

.kubernetes-build:                 &kubernetes-build
  tags:
    - kubernetes-parity-build
  environment:
    name: parity-build

#### stage:                        test

# test-linux-stable:
#   stage:                           test
#   # doesn't contain libpq
#   image:                           parity/rust-substrate-build:stretch
#   variables:
#     RUST_TOOLCHAIN: stable
#     # Enable debug assertions since we are running optimized builds for testing
#     # but still want to have debug assertions.
#     RUSTFLAGS: -Cdebug-assertions=y
#     TARGET: native
#   tags:
#     - linux-docker
#   only:
#     - tags
#     - master
#     - schedules
#     - web
#     - /^[0-9]+$/
#   except:
#     variables:
#       - $DEPLOY_TAG
#   before_script:
#     - sccache -s
#   script:
#     - time cargo test --all --release --verbose --locked
#   after_script:
#     - sccache -s

.build-only:                       &build-only
  only:
    - master
    - tags
    - web

#### stage:                        dockerize

build-publish-docker-release:
  <<:                              *build-only
  <<:                              *kubernetes-build
  stage:                           dockerize
  image:                           quay.io/buildah/stable
  # collect VERSION artifact here to pass it on to kubernetes
  variables:
    # GIT_STRATEGY:                none
    # DOCKERFILE:                  scripts/docker/Dockerfile
    CONTAINER_IMAGE:               parity/substrate-analytics
  before_script:
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
        ( echo "no docker credentials provided"; exit 1 )
    - echo "$Docker_Hub_Pass_Parity" |
        buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
  script:
    - buildah bud
        --squash
        --format=docker
        --tag "$CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA"
        --tag "$CONTAINER_IMAGE:latest" .
    - buildah push --format=v2s2 $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
                                 $CONTAINER_IMAGE:latest
  after_script:
    - buildah logout docker.io
  except:
    variables:
      - $DEPLOY_TAG

.deploy-template:                  &deploy
  <<:                              *build-only
  stage:                           deploy
  when:                            manual
  retry:                           1
  image:                           paritytech/kubetools:latest
  variables:
    NAMESPACE:                     "${KUBE_NAMESPACE}"
    REPLICAS:                      1
    WS_PORT:                       1024
    ANALYTICS_LOG_EXPIRY_H:        3
    ANALYTICS_RUST_LOG:            debug
    WS_MAX_PAYLOAD:                524_288 # Needs to be more than 65_536 (64KiB) which is actix-web default
    ASSETS_PATH:                   /srv/substrate-analytics
  tags:
    # this is the runner that is used to deploy it
    - kubernetes-parity-build
  before_script:
    - kubectl version
    - test "${DEPLOY_TAG}" || DEPLOY_TAG="$CI_COMMIT_SHORT_SHA"
  script:
    - echo "Substrate-analytics version = ${DEPLOY_TAG}"
    - export SUBSTRATE_ANALYTICS_DOCKER_IMAGE="parity/substrate-analytics:${DEPLOY_TAG}"
    # or use helm to render the template
    - cat ./deployment.template.yml | envsubst | tee deployment.yaml
    - kubectl apply -n "$KUBE_NAMESPACE" -f ./deployment.yaml
    - rm -f ./deployment.yaml
    - echo "# substrate-analytics namespace ${KUBE_NAMESPACE}"
    - kubectl -n ${KUBE_NAMESPACE} get all
    - echo "# wait for the rollout to complete"
    - kubectl -n ${KUBE_NAMESPACE} rollout status deployment/substrate-analytics


# have environment:url eventually point to the logs

.deploy-cibuild:                   &deploy-cibuild
  <<:                              *deploy
  dependencies:
    - build-publish-docker-release
  except:
    variables:
      - $DEPLOY_TAG

.deploy-tag:                       &deploy-tag
  <<:                              *deploy
  only:
    variables:
      - $DEPLOY_TAG

# have environment:url eventually point to the logs

deploy-ew3:
  <<:                              *deploy-cibuild
  environment:
    name: parity-prod-ew3

# deploy-ue1:
#   extends:                         .deploy-cibuild
#   environment:
#     name: parity-prod-ue1

deploy-ew3-tag:
  <<:                              *deploy-tag
  environment:
    name: parity-prod-ew3

# deploy-ue1-tag:
#   extends:                         .deploy-tag
#   environment:
#     name: parity-prod-ue1

